: 10_0

1 LINE.NUM
  %ScratchPad 
  3400  
  ^DynoPidRampStart   IO.SP.READ
  ^GetScratchPadResult @! 
8 JUMP ;
: 10_2

1 LINE.NUM
  |DynoLoad   $0001.. ROT PID@
  ^DynoPidRampCurrentSetpoint @! 

2 LINE.NUM
  %ScratchPad 
  3400  
  ^DynoPidRampSetpoint    IO.SP.READ
  ^GetScratchPadResult @! 

3 LINE.NUM
  %ScratchPad 
  3401  
  ^DynoPidRampTime    IO.SP.READ
  ^GetScratchPadResult @! 
0 JUMP ;
: 10_3

1 LINE.NUM
  %ScratchPad 
  3401  
  1    IO.SP.I.WRITE
  ^GetScratchPadResult @! 

2 LINE.NUM
  ^DynoPidRampTimer   StartTimer
0 JUMP ;
: 10_4

1 LINE.NUM
  %ScratchPad 
  3400  
  ^DynoPidRampStart   IO.SP.READ
  ^GetScratchPadResult @! 
6 JUMP ;
: 10_6
1 LINE.NUM ^DynoPidRampTimer @@F ^DynoPidRampCurrentTime @! 
2 LINE.NUM PTR_DynoRampWidgetPid  $0001.. ROT PID@ ^DynoPidRampCurrentSetpoint @! 
4 LINE.NUM ^DynoPidRampCurrentTime @@ ^DynoPidRampTime @@ F< IF 
6 LINE.NUM ^DynoPidRampSetpoint @@ ^DynoPidRampCurrentSetpoint @@ F- ^DynoPidRampTime @@ F/ ^DynoPidRampSlope @! 
8 LINE.NUM ^DynoPidRampSetpoint @@ ^DynoPidRampSlope @@ ^DynoPidRampTime @@ F* F- ^DynoPidRampIntercept @! 
10 LINE.NUM PTR_DynoRampWidgetPid ^DynoPidRampSlope @@ ^DynoPidRampCurrentTime @@ F* ^DynoPidRampIntercept @@ F+  $0002.. 3 ROLL !PID 
11 LINE.NUM ELSE 
12 LINE.NUM PTR_DynoRampWidgetPid ^DynoPidRampSetpoint @@  $0002.. 3 ROLL !PID 
13 LINE.NUM THEN 
15 LINE.NUM %ScratchPad 3402 PTR_DynoRampWidgetPid  $0002.. ROT PID@  IO.SP.F.WRITE DROP  
16 LINE.NUM %ScratchPad 3403 ^DynoPidRampCurrentTime @@  IO.SP.F.WRITE DROP  
2 JUMP ;
: 10_7

1 LINE.NUM
  ^DynoPidRampTimer   StopTimer

2 LINE.NUM
  &DynoPidRampWidget   STOP.T
5 JUMP ;
: 10_9
-7 JUMP ;
: 10_10
-5 JUMP ;
: 10_20
1 LINE.NUM %ScratchPad 3399 ^GetScratchPadResult  IO.SP.READ 0 = IF 
2 LINE.NUM |DynoSpeed 
MoveToPointer PTR_DynoRampWidgetPid 
3 LINE.NUM ELSE 
4 LINE.NUM |DynoLoad 
MoveToPointer PTR_DynoRampWidgetPid 
5 LINE.NUM THEN 
-8 JUMP ;
: 10_1
TRUE

1 LINE.NUM
  ^DynoPidRampStart @@ 
  1    =
LAND
IF -2 ELSE -4 THEN JUMP ;
: 10_5
TRUE

1 LINE.NUM
  ^DynoPidRampStart @@ 
  1    =
LAND
IF -7 ELSE -6 THEN JUMP ;
T: T10
DUMMY
10_0
10_2
10_3
10_4
10_6
10_7
10_9
10_10
10_20
10_1
10_5
T;
&DynoPidRampWidget ' T10 SETTASK
