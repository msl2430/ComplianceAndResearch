<local:BaseUserControl x:Class="EngineCell.Application.Views.TestDisplay.TestDisplay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EngineCell.Application.Views"
             xmlns:stripChart="clr-namespace:EngineCell.Application.Views.StripChart"
             xmlns:stripChartViewModel="clr-namespace:EngineCell.Application.ViewModels.StripChart"
             xmlns:pid="clr-namespace:EngineCell.Application.Views.Pid"
             xmlns:pidModel="clr-namespace:EngineCell.Application.ViewModels.Pid"
             xmlns:clocks="clr-namespace:EngineCell.Application.Views.Clocks"
             xmlns:extensions="clr-namespace:EngineCell.Application.Extensions"
             xmlns:widget="clr-namespace:EngineCell.Application.Views.Widget"
             xmlns:widgetModel="clr-namespace:EngineCell.Application.ViewModels.Widget"
             xmlns:d3="http://research.microsoft.com/DynamicDataDisplay/1.0"
             mc:Ignorable="d" d:DesignHeight="700" d:DesignWidth="1024"             
             Loaded="TestDisplay_OnLoaded">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type stripChartViewModel:StripChartViewModel}">
            <stripChart:StripChart/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type pidModel:PidDisplayViewModel}">
            <pid:PidDisplay></pid:PidDisplay>
        </DataTemplate>
        <DataTemplate DataType="{x:Type pidModel:DynoThrottlePidViewModel}">
          <pid:DynoThrottlePid></pid:DynoThrottlePid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type widgetModel:VentilationControlDisplayViewModel}">
          <widget:VentControlDisplay></widget:VentControlDisplay>
        </DataTemplate>
        <DataTemplate DataType="{x:Type widgetModel:DynoPidDisplayViewModel}">
            <widget:DynoPidDisplay></widget:DynoPidDisplay>
        </DataTemplate>
        <DataTemplate DataType="{x:Type widgetModel:StarterDisplayViewModel}">
            <widget:StarterDisplay></widget:StarterDisplay>
        </DataTemplate>
        <extensions:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <extensions:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="400" MinWidth="50" Width="340"/>
            <ColumnDefinition Width="5" />
            <ColumnDefinition MaxWidth="400" MinWidth="50" Width="340"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*" MinWidth="340"/>
        </Grid.ColumnDefinitions>
        <Grid Column="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="47" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Border Grid.Column="0" Grid.Row="0" BorderBrush="{StaticResource LightBlueBrush}" BorderThickness="0" Margin="5" Padding="2">
                    <Grid>
                      <Button Background="{StaticResource GreenBrush}" Click="StartPhaseButton_Click" Height="30" HorizontalAlignment="Center" Width="125" VerticalAlignment="Top" FontSize="12"
                         Visibility="{Binding Path=IsTestRunning, Converter={StaticResource InverseBoolToVisibilityConverter}}" IsEnabled="{Binding CanStartTest}">Start Test</Button>
                      <Button Background="OrangeRed" Click="StopPhaseButton_Click" Height="30" HorizontalAlignment="Center" Width="125" VerticalAlignment="Top" FontSize="12"
                         Visibility="{Binding Path=IsTestRunning, Converter={StaticResource BoolToVisibilityConverter}}">Stop Test</Button>
                        <!--<Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Label FontSize="18" Foreground="{StaticResource HeadlineBlueBrush}" HorizontalAlignment="Center">Test Setup</Label>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="5*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Center">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="5*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Content="Timed" Grid.Column="0" Height="30" FontSize="12" Background="{StaticResource LightBlueBrush}" Visibility="{Binding Path=IsManualTest, Converter={StaticResource InverseBoolToVisibilityConverter}}" HorizontalAlignment="Stretch"></Button>
                                    <Button Content="Timed" Grid.Column="0"  Height="30" FontSize="12" Visibility="{Binding Path=IsManualTest, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Stretch" Click="ToggleTestType" Tag="timed"></Button>
                                    <Button Content="Manual" Grid.Column="1" Height="30" FontSize="12" Visibility="{Binding Path=IsManualTest, Converter={StaticResource InverseBoolToVisibilityConverter}}" HorizontalAlignment="Stretch" Click="ToggleTestType" Tag="manual"></Button>
                                    <Button Content="Manual" Grid.Column="1" Height="30" FontSize="12" Background="{StaticResource LightBlueBrush}" Visibility="{Binding Path=IsManualTest, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Stretch"></Button>
                                </Grid>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Button Background="{StaticResource GreenBrush}" Click="StartPhaseButton_Click" Height="30" HorizontalAlignment="Center" Width="125" VerticalAlignment="Top" FontSize="12"
                            Visibility="{Binding Path=PhaseStarted, Converter={StaticResource InverseBoolToVisibilityConverter}}">Start</Button>
                                <Button Background="OrangeRed" Click="StopPhaseButton_Click" Height="30" HorizontalAlignment="Center" Width="125" VerticalAlignment="Top" FontSize="12"
                            Visibility="{Binding Path=PhaseStarted, Converter={StaticResource BoolToVisibilityConverter}}">Stop</Button>
                            </Grid>
                        </Grid>-->
                    </Grid>
                </Border>
            </Grid>
          <Grid Grid.Row="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="35"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
              <Label FontSize="18" Foreground="{StaticResource HeadlineBlueBrush}" HorizontalAlignment="Center">Test Phases</Label>
            </Grid>
            <Grid Grid.Row="1">
              <ScrollViewer>
              <ItemsControl ItemsSource="{Binding Path=Phases}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <StackPanel></StackPanel>
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Border BorderBrush="{StaticResource LightBlueBrush}" BorderThickness="1" Margin="5" Padding="2">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="15"/>
                          <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="125"/>
                          <ColumnDefinition Width="150"/>
                          <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1"  Grid.Row="0" HorizontalAlignment="Left" Foreground="{StaticResource GreenBrush}" Margin="-20,0,0,0" Visibility="{Binding Path=IsRunning, Converter={StaticResource BoolToVisibilityConverter}}">Active</TextBlock>
                        <TextBlock Height="50" Grid.Column="0" Grid.Row="1" TextWrapping="WrapWithOverflow" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="10" Foreground="{StaticResource BrightBlueBrush}" Text="{Binding Name}"></TextBlock>
                        <StackPanel Grid.Column="1" Margin="5" Grid.Row="1">
                          <TextBlock FontSize="10" Margin="2">Start Time: <TextBlock FontSize="11" Text="{Binding StartDateTimeString}"></TextBlock></TextBlock>
                          <TextBlock FontSize="10" Margin="2">End Time: <TextBlock FontSize="11" Text="{Binding EndDateTimeString}"></TextBlock></TextBlock>
                        </StackPanel>
                        <TextBlock Height="50" FontSize="20" Grid.Column="2" Grid.Row="1" Padding="10" VerticalAlignment="Center" Visibility="{Binding Path=IsCompleted, Converter={StaticResource BoolToVisibilityConverter}}">
                          <Rectangle Width="25" Height="25" Fill="{StaticResource GreenBrush}">
                            <Rectangle.OpacityMask>
                              <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_check}" />
                            </Rectangle.OpacityMask>
                          </Rectangle>
                        </TextBlock>
                        <TextBlock Height="50" FontSize="20" Grid.Column="2" Grid.Row="1" Padding="10" VerticalAlignment="Center" >
                          <Rectangle Width="25" Height="25" Fill="{StaticResource DarkBlueBrush}" Visibility="{Binding Path=IsRunning, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Rectangle.OpacityMask>
                              <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_timer_forward}" />
                            </Rectangle.OpacityMask>
                          </Rectangle>
                        </TextBlock>
                      </Grid>
                    </Border>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
              </ScrollViewer>
            </Grid>
          </Grid>
        </Grid>
        <GridSplitter Grid.Column="1" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <Grid Column="2">
            <TextBlock Foreground="{StaticResource HeadlineBlueBrush}" FontSize="18" HorizontalAlignment="Center" Margin="0,12">Active Widgets</TextBlock>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="0,40,0,0" VerticalAlignment="Top" Height="{Binding ElementName=WidgetPanel, Path=ActualHeight}">
                <StackPanel Name="WidgetPanel"  Orientation="Vertical">
                    <!--<Border  BorderBrush="{StaticResource LightBlueBrush}" BorderThickness="1" Margin="5" Padding="5" Visibility="{Binding Path=VentControl1Display.IsActive, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentControl x:Name="VentControl1" Content="{Binding VentControl1Display}"></ContentControl>
                    </Border>
                    <Border  BorderBrush="{StaticResource LightBlueBrush}" BorderThickness="1" Margin="5" Padding="5" Visibility="{Binding Path=StarterDisplay.IsActive, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentControl x:Name="Starter" Content="{Binding StarterDisplay}"></ContentControl>
                    </Border>
                    <Border BorderBrush="{StaticResource LightBlueBrush}" BorderThickness="1" Margin="5" Padding="5" Visibility="{Binding Path=DynoPidDisplay.IsActive, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentControl x:Name="DynoPid" Content="{Binding DynoPidDisplay}"></ContentControl>
                    </Border>-->
                </StackPanel>
            </ScrollViewer>
        </Grid>                    
        <GridSplitter Grid.Column="3" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <Grid Column="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>
            <Grid Row="0">
              <Grid.RowDefinitions>
                  <RowDefinition Height="39"/>
                  <RowDefinition Height="45"/>
                  <RowDefinition Height="*"/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <TextBlock Grid.Row="0" Foreground="{StaticResource HeadlineBlueBrush}" FontSize="18" HorizontalAlignment="Center" Margin="0,12,0,0">Test Data</TextBlock>
              <Grid Row="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                  <clocks:RunTime x:Name="RunTimeClock" IsRunning="False"  HorizontalAlignment="Center"></clocks:RunTime>
                  <clocks:TimeRemaining x:Name="TimeRemaining" IsRunning="False"  HorizontalAlignment="Center" ></clocks:TimeRemaining>
                </StackPanel>
              </Grid>
              <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                  </Grid.ColumnDefinitions>
                  <StackPanel Grid.Column="0">
                    <ItemsControl ItemsSource="{Binding Path=LeftVisiblePoints}">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <StackPanel/>
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Grid Margin="30,5,0,5" Width="250">
                            <Grid Visibility="{Binding Path=IsAnalog, Converter={StaticResource BoolToVisibilityConverter}}">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="175"/>
                                <ColumnDefinition Width="75"/>
                              </Grid.ColumnDefinitions>
                              <Label VerticalAlignment="Center" Width="125" HorizontalContentAlignment="Center" Content="{Binding Path=CustomName}" Height="30" FontSize="15"></Label>
                              <TextBox IsUndoEnabled="False" Grid.Column="1" Text="{Binding Path=AverageData}" Height="30" FontSize="15"></TextBox>
                            </Grid>
                            <Grid Visibility="{Binding Path=IsAnalog, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="175"/>
                                <ColumnDefinition Width="75"/>
                              </Grid.ColumnDefinitions>
                              <Label VerticalAlignment="Center" Width="125" HorizontalContentAlignment="Center" Content="{Binding Path=CustomName}" Height="30" FontSize="15"></Label>
                              <TextBox IsUndoEnabled="False" Grid.Column="1" IsReadOnly="True" Text="On" VerticalAlignment="Center" Margin="7,0,0,0" Width="50" TextAlignment="Center" Background="{StaticResource GreenBrush}" Foreground="WhiteSmoke"
                                      Visibility="{Binding Path=IsDigitalOn, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}"></TextBox>
                              <TextBox IsUndoEnabled="False" Grid.Column="1" IsReadOnly="True" Text="Off" VerticalAlignment="Center" Margin="7,0,0,0" Width="50" TextAlignment="Center" Background="Red" Foreground="WhiteSmoke"
                                       Visibility="{Binding Path=IsDigitalOn, Converter={StaticResource InverseBoolToVisibilityConverter}, ConverterParameter=true}"></TextBox>
                            </Grid>
                          </Grid>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </StackPanel>
                  <StackPanel Grid.Column="1">
                    <ItemsControl ItemsSource="{Binding Path=RightVisiblePoints}">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <StackPanel/>
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Grid Margin="30,5,0,5" Width="250">
                            <Grid Visibility="{Binding Path=IsAnalog, Converter={StaticResource BoolToVisibilityConverter}}">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="175"/>
                                <ColumnDefinition Width="75"/>
                              </Grid.ColumnDefinitions>
                              <Label VerticalAlignment="Center" Width="125" HorizontalContentAlignment="Center" Content="{Binding Path=CustomName}" Height="30" FontSize="15"></Label>
                              <TextBox IsUndoEnabled="False" Grid.Column="1" Text="{Binding Path=AverageData}" Height="30" FontSize="15"></TextBox>
                            </Grid>
                            <Grid Visibility="{Binding Path=IsAnalog, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="175"/>
                                <ColumnDefinition Width="75"/>
                              </Grid.ColumnDefinitions>
                              <Label VerticalAlignment="Center" Width="125" HorizontalContentAlignment="Center" Content="{Binding Path=CustomName}" Height="30" FontSize="15"></Label>
                              <TextBox IsUndoEnabled="False" Grid.Column="1" IsReadOnly="True" Text="On" VerticalAlignment="Center" Margin="7,0,0,0" Width="50" TextAlignment="Center" Background="{StaticResource GreenBrush}" Foreground="WhiteSmoke"
                                      Visibility="{Binding Path=IsDigitalOn, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}"></TextBox>
                              <TextBox IsUndoEnabled="False" Grid.Column="1" IsReadOnly="True" Text="Off" VerticalAlignment="Center" Margin="7,0,0,0" Width="50" TextAlignment="Center" Background="Red" Foreground="WhiteSmoke"
                                       Visibility="{Binding Path=IsDigitalOn, Converter={StaticResource InverseBoolToVisibilityConverter}, ConverterParameter=true}"></TextBox>
                            </Grid>
                          </Grid>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </StackPanel>
                </Grid>
                </ScrollViewer>
              </Grid>
            <Grid Row="1">
                <ContentControl x:Name="StripChartContent" Content="{Binding ChartViewModel}"></ContentControl>
            </Grid>
        </Grid>
    </Grid>
</local:BaseUserControl>
